/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sistema.telas;

import br.com.sistema.controller.FacadeAssistente;
import br.com.sistema.modelos.Bloco;
import br.com.sistema.modelos.Evento;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Reginaldo
 */
public class AlocarEvento extends javax.swing.JFrame {
    String tela;
    FacadeAssistente fachadaAssistente = new FacadeAssistente();
    private Vector<Evento> vetorEvento;
    private String[] vetorString = {"sem eventos"};
    boolean mensagem = false;
    private TelaAssistenteSala telaAssistente;
    String nomeEvento;
    
    /**
     * Creates new form AlocarEvento
     */
    public AlocarEvento() throws SQLException {
        initComponents();
        URL url = this.getClass().getResource("/imagens/icone.png");  
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);
        vetorEvento = fachadaAssistente.carregaComboEvento();
        if(vetorEvento.size()>0){
            descricao.setModel(new DefaultComboBoxModel(vetorEvento));    
        }else descricao.setModel(new DefaultComboBoxModel(vetorString));
        carregarJTableAlocarEvento();
//        descricao.setText(nomeEvento);
    }
    
    public AlocarEvento(TelaAssistenteSala telaAssistenteSala, String NomeEvento) throws IOException, SQLException {
        this();
        this.telaAssistente = telaAssistenteSala;
        this.nomeEvento = NomeEvento;
    }
    
    public AlocarEvento(TelaAssistenteSala telaAssistenteSala) throws IOException, SQLException {
        this();
        this.telaAssistente = telaAssistenteSala;
    }
    
    public void recebeParametros(String lista) {
//        descricao.setText(lista);
    }
    
    public void carregarJTableAlocarEvento() throws SQLException {
        List<String[]> lista = fachadaAssistente.listarSala();
        DefaultTableModel modelo = new javax.swing.table.DefaultTableModel();
        modelo.addColumn("Sala");
        modelo.addColumn("Bloco");

        if (lista.isEmpty()) {
            modelo.addRow(new String[]{"sem dados", null});
        }

        for (String[] materiais : lista) {
            modelo.addRow(new String[]{materiais[1],
                materiais[2]});
        }
        jTable1.setModel(modelo);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cancelar = new javax.swing.JButton();
        cadastrar = new javax.swing.JButton();
        descricao = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Alocar evento");

        jLabel1.setText("Evento");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Cancel_Icon_16.png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        cadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Ok_Icon_16.png"))); // NOI18N
        cadastrar.setText("Alocar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        descricao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(descricao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        
        String desc = descricao.getSelectedItem().toString();
        if(desc.equals("sem eventos")){
            JOptionPane.showMessageDialog(null, "Não há eventos para alocar!");
            descricao.requestFocus();
        }else{
            String Str = desc;
            String[] TableLine;
            TableLine = Str.split(";");
            List lista = new ArrayList();
            for (String cell : TableLine) {
                lista.add(cell);
            }
            String[] line = Str.split(" - ");
            String capacidade = line[1];
            nomeEvento = line[0];
            int capacidadeEvento = Integer.parseInt(capacidade);
            int linha = jTable1.getSelectedRow();
            if (linha != -1) {
                try {
//                    nomeEvento=vetorEvento.get(linha).getNome();
                    String[] lista1 = fachadaAssistente.listarSala().get(linha);
                    Integer id_sala = Integer.parseInt(lista1[0]);
                    Integer id_evento = fachadaAssistente.getEvento(nomeEvento);
                    String sala = lista1[2]+" - "+lista1[1];
                    int capacidadeSala = Integer.parseInt(lista1[3]);
                    if(capacidadeSala >= capacidadeEvento && descricao !=null){
                        if(fachadaAssistente.cadastrarAlocacao(id_evento, desc, sala)){
                            JOptionPane.showMessageDialog(null, "Alocado com sucesso!");
                            SelecionarMaterial tela;
                            this.telaAssistente.carregarJTableEvento();
                            AlocarEvento tela2 = this;
                            tela = new SelecionarMaterial(tela2, desc);
                            tela.setVisible(true);
                        }else JOptionPane.showMessageDialog(null, "Erro na alocação!");
                        this.dispose();
                    }else if(capacidadeSala < capacidadeEvento) {
                        JOptionPane.showMessageDialog(null, "Capacidade da sala não suporta o evento");
                        descricao.requestFocus();
                    }else{
                        JOptionPane.showMessageDialog(null, "Não há eventos para alocar!");
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(AlocarEvento.class.getName()).log(Level.SEVERE, null, ex);
                }

            }else{
                JOptionPane.showMessageDialog(null, "Selecione uma sala!");
            }
            
            
        }
        
    }//GEN-LAST:event_cadastrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlocarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlocarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlocarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlocarEvento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AlocarEvento().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(AlocarEvento.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JButton cancelar;
    private javax.swing.JComboBox descricao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
